@model BookStoreRepostry.ViewModels.RegisterViewModel

@{
    ViewData["Title"] = "Register";
}
<!--begin::Authentication - Sign-up -->
<div class="d-flex flex-column flex-column-fluid bgi-position-y-bottom position-x-center bgi-no-repeat bgi-size-contain bgi-attachment-fixed" style="background-image: url(~/assets/media/illustrations/development-hd.png)">
    <!--begin::Content-->
    <div class="d-flex flex-center flex-column flex-column-fluid p-10 pb-lg-20">
        <!--begin::Logo-->
        <a asp-controller="Dashboard" asp-action="Index" class="mb-12">
            <img alt="Logo" src="~/assets/media/logos/logo-2-dark.svg" class="h-45px" />
        </a>
        <!--end::Logo-->
        <!--begin::Wrapper-->
        <div class="w-lg-600px bg-body rounded shadow-sm p-10 p-lg-15 mx-auto">
            <!--begin::Form-->
            <form class="form w-100" novalidate="novalidate" id="kt_sign_up_form" method="post" asp-action="CheckRegister">
                <!--begin::Heading-->
                <div class="mb-10 text-center">
                    <!--begin::Title-->
                    <h1 class="text-dark mb-3">Create an Account</h1>
                    <!--end::Title-->
                    <!--begin::Link-->
                    <div class="text-gray-400 fw-bold fs-4">
                        Already have an account?
                        <a asp-action="Login" class="link-primary fw-bolder">Sign in here</a>
                    </div>
                    <!--end::Link-->
                </div>
                <div asp-validation-summary="All" class="text-danger"></div>
                <!--end::Heading-->
                <!--begin::Action-->
                <button type="button" class="btn btn-light-primary fw-bolder w-100 mb-10">
                    <img alt="Logo" src="~/assets/media/svg/brand-logos/google-icon.svg" class="h-20px me-3" />Sign in with Google
                </button>
                <!--end::Action-->
                <!--begin::Separator-->
                <div class="d-flex align-items-center mb-10">
                    <div class="border-bottom border-gray-300 mw-50 w-100"></div>
                    <span class="fw-bold text-gray-400 fs-7 mx-2">OR</span>
                    <div class="border-bottom border-gray-300 mw-50 w-100"></div>
                </div>
                <!--end::Separator-->
                <!--begin::Input group-->
                <div class="row fv-row mb-7">
                    <!--begin::Col-->
                    <div class="col-xl-12">
                        <label class="form-label fw-bolder text-dark fs-6" asp-for="UserName"></label>
                        <input class="form-control form-control-lg form-control-solid" asp-for="UserName" type="text" placeholder="" name="UserName" autocomplete="off" />
                        <span asp-validation-for="UserName" class="text-danger"></span>
                    </div>
                    <!--end::Col-->
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="fv-row mb-7">
                    <label class="form-label fw-bolder text-dark fs-6" asp-for="Email"></label>
                    <input class="form-control form-control-lg form-control-solid" type="email" placeholder="" asp-for="Email" name="email" autocomplete="off" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="mb-10 fv-row" data-kt-password-meter="true">
                    <!--begin::Wrapper-->
                    <div class="mb-1">
                        <!--begin::Label-->
                        <label class="form-label fw-bolder text-dark fs-6" asp-for="Password"></label>
                        <!--end::Label-->
                        <!--begin::Input wrapper-->
                        <div class="position-relative mb-3">
                            <input class="form-control form-control-lg form-control-solid" type="password" asp-for="Password" placeholder="" name="password" autocomplete="off" />
                            <span class="btn btn-sm btn-icon position-absolute translate-middle top-50 end-0 me-n2" data-kt-password-meter-control="visibility">
                                <i class="bi bi-eye-slash fs-2"></i>
                                <i class="bi bi-eye fs-2 d-none"></i>
                            </span>
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        <!--end::Input wrapper-->
                        <!--begin::Meter-->
                        <div class="d-flex align-items-center mb-3" data-kt-password-meter-control="highlight">
                            <div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
                            <div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
                            <div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px me-2"></div>
                            <div class="flex-grow-1 bg-secondary bg-active-success rounded h-5px"></div>
                        </div>
                        <!--end::Meter-->
                    </div>
                    <!--end::Wrapper-->
                    <!--begin::Hint-->
                    <div class="text-muted">Use 8 or more characters with a mix of letters, numbers &amp; symbols.</div>
                    <!--end::Hint-->
                </div>
                <!--end::Input group=-->
                <!--begin::Input group-->
                <div class="fv-row mb-5">
                    <label class="form-label fw-bolder text-dark fs-6" asp-for="ConfirmPassword"></label>
                    <input class="form-control form-control-lg form-control-solid" type="password" asp-for="ConfirmPassword" placeholder="" name="ConfirmPassword" autocomplete="off" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
                <!--end::Input group-->
                <!--begin::Input group-->
                <div class="fv-row mb-10">
                    <label class="form-check form-check-custom form-check-solid form-check-inline">
                        <input class="form-check-input" type="checkbox" name="toc" value="1" />
                        <span class="form-check-label fw-bold text-gray-700 fs-6">
                            I Agree
                            <a href="#" class="ms-1 link-primary">Terms and conditions</a>.
                        </span>
                    </label>
                </div>
                <!--end::Input group-->
                <!--begin::Actions-->
                <div class="text-center">
                    <button type="submit" id="kt_sign_up_submit" class="btn btn-lg btn-primary">
                        <span class="indicator-label">Submit</span>
                        <span class="indicator-progress">
                            Please wait...
                            <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                        </span>
                    </button>
                </div>
                <!--end::Actions-->
            </form>
            <!--end::Form-->
        </div>
        <!--end::Wrapper-->
    </div>
    <!--end::Content-->
    <!--begin::Footer-->
    <div class="d-flex flex-center flex-column-auto p-10">
        <!--begin::Links-->
        <div class="d-flex align-items-center fw-bold fs-6">
            <a href="https://keenthemes.com" class="text-muted text-hover-primary px-2">About</a>
            <a href="mailto:support@keenthemes.com" class="text-muted text-hover-primary px-2">Contact</a>
            <a href="https://1.envato.market/EA4JP" class="text-muted text-hover-primary px-2">Contact Us</a>
        </div>
        <!--end::Links-->
    </div>
    <!--end::Footer-->
</div>
<!--end::Authentication - Sign-up-->

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

@*<script>
    newFunction();

function newFunction() {
    "use strict";
    var KTSignupGeneral = function () {
        var e, t, a, s, r = function () {
            return 100 === s.getScore();
        };
        return {
            init: function () {
                e = document.querySelector("#kt_sign_up_form"), t = document.querySelector("#kt_sign_up_submit"),
                    s = KTPasswordMeter.getInstance(e.querySelector('[data-kt-password-meter="true"]')),
                    a = FormValidation.formValidation(e, {
                    fields: {
                        "UserName": {validators: {notEmpty: {message: "User Name  is required"}}},
                        email: {
                            validators: {
                                notEmpty: {message: "Email address is required"},
                                emailAddress: {message: "The value is not a valid email address"}
                            }
                        },
                        password: {
                            validators: {
                                notEmpty: {message: "The password is required"}, callback: {
                                    message: "Please enter valid password", callback: function (e) {
                                        if (e.value.length > 0)
                                            return r();
                                    }
                                }
                            }
                        },
                        "confirm-password": {
                            validators: {
                                notEmpty: {message: "The password confirmation is required"},
                                identical: {
                                    compare: function () {
                                        return e.querySelector('[name="password"]').value;
                                    }, message: "The password and its confirm are not the same"
                                }
                            }
                        },
                        toc: {validators: {notEmpty: {message: "You must accept the terms and conditions"}}}
                    },
                    plugins: {
                        trigger: new FormValidation.plugins.Trigger({event: {password: !1}}),
                        bootstrap: new FormValidation.plugins.Bootstrap5({
                            rowSelector: ".fv-row",
                            eleInvalidClass: "",
                            eleValidClass: ""
                        })
                    }
                }), t.addEventListener("click", (function (r) {
                    r.preventDefault(), a.revalidateField("password"), a.validate().then((function (a) {
                        "Valid" == a ? (t.setAttribute("data-kt-indicator", "on"), t.disabled = !0, setTimeout((function () {

                            t.removeAttribute("data-kt-indicator"), t.disabled = !1, Swal.fire({
                                text: "You have successfully reset your password!",
                                icon: "success",
                                buttonsStyling: !1,
                                confirmButtonText: "Ok, got it!",
                                customClass: {confirmButton: "btn btn-primary"}
                            }).then((function (t) {
                                t.isConfirmed && (e.reset(), s.reset());
                            }));
                        }), 1500)) : Swal.fire({
                            text: "Sorry, looks like there are some errors detected, please try again.",
                            icon: "error",
                            buttonsStyling: !1,
                            confirmButtonText: "Ok, got it!",
                            customClass: {confirmButton: "btn btn-primary"}
                        });
                    }));
                })), e.querySelector('input[name="password"]').addEventListener("input", (function () {
                    this.value.length > 0 && a.updateFieldStatus("password", "NotValidated");
                }));
            }
        };
    }();
    KTUtil.onDOMContentLoaded((function () {
        KTSignupGeneral.init();
    }));
}

</script>*@
    <!--begin::Page Custom Javascript(used by this page)-->
    <!--
        
    <script src="~/assets/js/custom/authentication/sign-up/general.js"></script>
        -->
    <!--end::Page Custom Javascript-->
    <!--end::Javascript-->
}
